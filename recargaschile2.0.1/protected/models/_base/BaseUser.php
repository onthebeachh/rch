<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $tipo
 * @property integer $estado
 *
 * @property Cliente[] $clientes
 * @property Empleado[] $empleados
 * @property Operador[] $operadors
 */
abstract class BaseUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User|Users', $n);
	}

	public static function representingColumn() {
		return 'username';
	}

	public function rules() {
		return array(
			array('estado', 'numerical', 'integerOnly'=>true),
			array('username, password, tipo', 'length', 'max'=>45),
			array('username, password, tipo, estado', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, username, password, tipo, estado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'clientes' => array(self::HAS_MANY, 'Cliente', 'user_id'),
			'empleados' => array(self::HAS_MANY, 'Empleado', 'user_id'),
			'operadors' => array(self::HAS_MANY, 'Operador', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'tipo' => Yii::t('app', 'Tipo'),
			'estado' => Yii::t('app', 'Estado'),
			'clientes' => null,
			'empleados' => null,
			'operadors' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('tipo', $this->tipo, true);
		$criteria->compare('estado', $this->estado);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}